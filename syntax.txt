
program := stmt program
         | none

stmt := "return" expression ";"
      | "if" "(" expression ")" stmt
      | "for" "(" expression ";" expression ";" expression ")" stmt
      | "while" "(" expression ")" stmt
      | "{" block_items "}"
      | expression ";"

block_items := none
             | stmt
             | stmt block_items

expression := equality
            | equality "=" expression

equality := relational
          | equality "==" relational
          | equality "!=" relational

relational := add
            | relational "<=" add
            | relational ">=" add
            | relational "<"  add
            | relational ">"  add

add := mul
     | add "+" mul
     | add "-" mul

mul := unary
     | mul "*" unary
     | mul "/" unary

unary := "+" funccall
       | "-" funccall
       | funccall

funccall := term
          | term "(" ")"
          | term "(" argument_list ")"

argument_list := expression
               | expression "," argument_list

term := "(" expression ")"
      | number
      | identifier
